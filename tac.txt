bubbleSort: 
T1 = sizeof(arr)
size_arr = T1
T2 = 0
T3 = size_arr - 1
T4 = 1
i = T2
goto L1
L1: 
if T2 <= T3 goto L2
goto L3
L2: 
T5 = 0
T6 = size_arr - i
T7 = T6 - 1
T8 = 1
j = T5
goto L5
L5: 
if T5 <= T7 goto L6
goto L7
L6: 
T9 = 4 * j
T10 = arr(T9)
T11 = j + 1
T12 = 4 * T11
T13 = number(T12)
if T2 greater than T3 goto L9
goto L10
L9: 
T14 = 4 * j
T15 = arr(T14)
temp = T15
T16 = 4 * j
T17 = j + 1
T18 = 4 * T17
T19 = arr(T18)
arr[T16] = T19
T20 = j + 1
T21 = 4 * T20
T22 = temp
arr[T21] = T22
goto L11
T5 = T5 + T8
j = T5
goto L5

L7:
T2 = T2 + T4
i = T2
goto L1

L3:
send arr
goto LbubbleSort
temporary: 
goto Ltemporary
start:
d = 10
get b, c
get a
T23 = b + c
T24 = T23 - d
b = T24

goto bubbleSort
LbubbleSort:
arr = func
disp $a, b, c, 123
